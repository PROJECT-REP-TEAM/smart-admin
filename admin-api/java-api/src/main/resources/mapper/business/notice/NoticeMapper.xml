<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.lab1024.smartadmin.module.business.notice.dao.NoticeDao">

    <select id="queryByPage" resultType="net.lab1024.smartadmin.module.business.notice.domain.vo.NoticeVO">
        select
            n.id,
            n.title,
            n.create_user,
            e.actual_name as createUserName,
            n.send_status,
            n.create_time
        from t_notice n
        left join t_employee e on e.id = n.create_user
        <where>
            <if test="query.startDate != null and query.startDate != ''">
                AND DATE_FORMAT(n.create_time, '%Y-%m-%d') &gt;= #{query.startDate}
            </if>
            <if test="query.endDate != null and query.endDate != ''">
                AND DATE_FORMAT(n.create_time, '%Y-%m-%d') &lt;= #{query.endDate}
            </if>
            <if test="query.title != null and query.title != ''">
                AND INSTR(n.title,#{query.title})
            </if>
            <if test="query.deletedFlag != null">
                AND n.deleted_flag = #{query.deletedFlag}
            </if>
        </where>
        ORDER by n.create_time desc
    </select>



    <select id="queryUnreadByPage" resultType="net.lab1024.smartadmin.module.business.notice.domain.vo.NoticeVO">
        select
        n.id,
        n.title,
        n.send_status,
        n.create_user,
        e.actual_name as createUserName,
        n.create_time
        from t_notice n
        left join t_employee e on e.id = n.create_user
        where n.id not in (select notice_id from t_notice_receive_record nrr where nrr.employee_id = #{employeeId})
        and n.send_status = #{sendStatus}
        ORDER by n.create_time desc
    </select>


    <select id="queryReceiveByPage" resultType="net.lab1024.smartadmin.module.business.notice.domain.dto.NoticeReceiveForm">
       select
        n.id,
        n.title,
        n.create_user,
        n.send_status,
        e.actual_name as createUserName,
        n.create_time,
        nrr.create_time as receiveTime
        from t_notice n
        left join t_employee e on e.id = n.create_user
        left join t_notice_receive_record nrr on nrr.notice_id=n.id and nrr.employee_id=#{query.employeeId}
        <where>
            <if test="query.startDate != null and query.startDate != ''">
                AND DATE_FORMAT(n.create_time, '%Y-%m-%d') &gt;= #{query.startDate}
            </if>
            <if test="query.endDate != null and query.endDate != ''">
                AND DATE_FORMAT(n.create_time, '%Y-%m-%d') &lt;= #{query.endDate}
            </if>
            <if test="query.title != null and query.title != ''">
                AND INSTR(n.title,#{query.title})
            </if>
            <if test="query.sendStatus != null">
                AND n.send_status = #{query.sendStatus}
            </if>
        </where>
        ORDER by n.create_time desc
    </select>




    <select id="detail" resultType="net.lab1024.smartadmin.module.business.notice.domain.vo.NoticeDetailVO">
        select
        n.id,
        n.title,
        n.content,
        n.send_status,
        n.create_user,
        e.actual_name as createUserName,
        n.create_time,
        n.update_time
        from t_notice n
        left join t_employee e on e.id = n.create_user
        where n.id = #{id}
    </select>



    <update id="logicDeleteById">
        UPDATE t_notice
        set deleted_flag = #{deletedFlag}
        WHERE id =#{id}
    </update>


    <delete id="logicDeleteByIds">
        UPDATE t_notice set deleted_flag = #{deletedFlag} where id in
        <foreach collection="idList" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </delete>


    <select id="noticeCount" resultType="integer">
        select
        count(1)
        from t_notice where send_status = #{sendStatus}
    </select>

    <select id="readCount" resultType="net.lab1024.smartadmin.module.business.notice.domain.dto.NoticeReadCountDTO">
        SELECT
        nrr.employee_id,
        count(1) as readCount
        from t_notice_receive_record nrr
        where nrr.employee_id in
        <foreach collection="employeeIds" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
        GROUP BY nrr.employee_id
    </select>



    <select id="noticeUnreadCount" resultType="integer">
        select
        count(1)
        from t_notice n
        where n.id not in (select msg_id from t_notice_receive_record nrr where nrr.employee_id = #{employeeId})
         and n.send_status = #{sendStatus}
    </select>


</mapper>